{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\nmapboxgl.accessToken = MAPBOX_API_TOKEN; //var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    console.log(\"style: \" + map.isStyleLoaded());\n\n    if (!map.isStyleLoaded()) {\n      loadMap(map);\n    }\n  }, []);\n\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\").then(response => response.json()).then(data => map.once(\"load\", function () {\n      map.addSource(\"points\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: data\n        }\n      });\n      console.log(data);\n      map.addLayer({\n        id: \"circles\",\n        source: \"points\",\n        type: \"circle\",\n        paint: {\n          \"circle-opacity\": 0.75,\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"total_cases\"], 1, 4, 1000, 8, 4000, 10, 8000, 14, 12000, 18, 100000, 40, 250000, 100],\n          \"circle-color\": \"#EA240F\"\n        }\n      });\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapBox,\n    style: {\n      width: \"60%\",\n      minHeight: \"960px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);","map":{"version":3,"sources":["/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js"],"names":["React","useEffect","useRef","mapboxgl","MAPBOX_API_TOKEN","actions","connect","accessToken","Map","props","mapBox","fetchDetailedReport","map","container","current","style","center","zoom","console","log","isStyleLoaded","loadMap","fetch","then","response","json","data","once","addSource","type","features","addLayer","id","source","paint","width","minHeight","mapStateToProps","state","reportList","reports","mapActionToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAH,QAAQ,CAACI,WAAT,GAAuBH,gBAAvB,C,CACA;;AAEA,MAAMI,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,MAAM,GAAGR,MAAM,EAArB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACE,mBAAN;AACA,QAAIC,GAAG,GAAG,IAAIT,QAAQ,CAACK,GAAb,CAAiB;AACzBK,MAAAA,SAAS,EAAEH,MAAM,CAACI,OADO;AAEzBC,MAAAA,KAAK,EAAE,iCAFkB;AAGzBC,MAAAA,MAAM,EAAE,CAAC,CAAC,GAAF,EAAO,EAAP,CAHiB;AAIzBC,MAAAA,IAAI,EAAE;AAJmB,KAAjB,CAAV;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYP,GAAG,CAACQ,aAAJ,EAAxB;;AACA,QAAI,CAACR,GAAG,CAACQ,aAAJ,EAAL,EAA0B;AACxBC,MAAAA,OAAO,CAACT,GAAD,CAAP;AACD;AACF,GAZQ,EAYN,EAZM,CAAT;;AAaA,QAAMS,OAAO,GAAGT,GAAG,IAAI;AACrBU,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IACRd,GAAG,CAACe,IAAJ,CAAS,MAAT,EAAiB,YAAW;AAC1Bf,MAAAA,GAAG,CAACgB,SAAJ,CAAc,QAAd,EAAwB;AACtBC,QAAAA,IAAI,EAAE,SADgB;AAEtBH,QAAAA,IAAI,EAAE;AACJG,UAAAA,IAAI,EAAE,mBADF;AAEJC,UAAAA,QAAQ,EAAEJ;AAFN;AAFgB,OAAxB;AAOAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAd,MAAAA,GAAG,CAACmB,QAAJ,CAAa;AACXC,QAAAA,EAAE,EAAE,SADO;AAEXC,QAAAA,MAAM,EAAE,QAFG;AAGXJ,QAAAA,IAAI,EAAE,QAHK;AAIXK,QAAAA,KAAK,EAAE;AACL,4BAAkB,IADb;AAEL,2BAAiB,CACf,aADe,EAEf,CAAC,QAAD,CAFe,EAGf,CAAC,KAAD,EAAQ,aAAR,CAHe,EAIf,CAJe,EAKf,CALe,EAMf,IANe,EAOf,CAPe,EAQf,IARe,EASf,EATe,EAUf,IAVe,EAWf,EAXe,EAYf,KAZe,EAaf,EAbe,EAcf,MAde,EAef,EAfe,EAgBf,MAhBe,EAiBf,GAjBe,CAFZ;AAqBL,0BAAgB;AArBX;AAJI,OAAb;AA4BD,KArCD,CAHJ;AA0CD,GA3CD;;AA6CA,sBAAO;AAAK,IAAA,GAAG,EAAExB,MAAV;AAAkB,IAAA,KAAK,EAAE;AAAEyB,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA7DD;;AA8DA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcd;AADM,CAAL,CAA7B;;AAIA,MAAMe,gBAAgB,GAAG;AACvB9B,EAAAA,mBAAmB,EAAEN,OAAO,CAACM;AADN,CAAzB;AAGA,eAAeL,OAAO,CAAC+B,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CjC,GAA3C,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\n\nmapboxgl.accessToken = MAPBOX_API_TOKEN;\n//var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    console.log(\"style: \" + map.isStyleLoaded());\n    if (!map.isStyleLoaded()) {\n      loadMap(map);\n    }\n  }, []);\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\")\n      .then(response => response.json())\n      .then(data =>\n        map.once(\"load\", function() {\n          map.addSource(\"points\", {\n            type: \"geojson\",\n            data: {\n              type: \"FeatureCollection\",\n              features: data\n            }\n          });\n          console.log(data);\n          map.addLayer({\n            id: \"circles\",\n            source: \"points\",\n            type: \"circle\",\n            paint: {\n              \"circle-opacity\": 0.75,\n              \"circle-radius\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"get\", \"total_cases\"],\n                1,\n                4,\n                1000,\n                8,\n                4000,\n                10,\n                8000,\n                14,\n                12000,\n                18,\n                100000,\n                40,\n                250000,\n                100\n              ],\n              \"circle-color\": \"#EA240F\"\n            }\n          });\n        })\n      );\n  };\n\n  return <div ref={mapBox} style={{ width: \"60%\", minHeight: \"960px\" }}></div>;\n};\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);\n"]},"metadata":{},"sourceType":"module"}