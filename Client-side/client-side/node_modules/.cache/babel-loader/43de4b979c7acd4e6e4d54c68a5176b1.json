{"ast":null,"code":"import { ACTION_TYPES, BASE_URL } from \"./actionTypes\";\nexport const fetchSummaryReport = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({\n      query: `{getsummaryreport}`\n    })\n  }).then(response => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_SUMMARY_REPORT,\n      payload: response.json()\n    });\n  });\n};\nexport const fetchDetailedReport = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({\n      query: `{getalldetailedreports{\n        _id,\n        active,\n        confirmed,\n        deaths,\n        recovered,\n        flag_url,\n        longitude,\n        latitude}\n    }`\n    })\n  }).then(response => response.json()).then(data => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_DETAILED_REPORT,\n      payload: data.data.getalldetailedreports\n    });\n  });\n};\nexport const fetchCountryData = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({\n      query: `{getcountries}`\n    })\n  }).then(response => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_COUNTRY_DATA,\n      payload: response.json()\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/actions/index.js"],"names":["ACTION_TYPES","BASE_URL","fetchSummaryReport","dispatch","fetch","method","headers","body","JSON","stringify","query","then","response","type","FETCH_SUMMARY_REPORT","payload","json","fetchDetailedReport","data","FETCH_DETAILED_REPORT","getalldetailedreports","fetchCountryData","FETCH_COUNTRY_DATA"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,eAAvC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAMC,QAAQ,IAAI;AAClDC,EAAAA,KAAK,CAACH,QAAD,EAAW;AACdI,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFK;AAGdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAf;AAHQ,GAAX,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAClBT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEb,YAAY,CAACc,oBADZ;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT;AAFF,KAAD,CAAR;AAID,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,mBAAmB,GAAG,MAAMd,QAAQ,IAAI;AACnDC,EAAAA,KAAK,CAACH,QAAD,EAAW;AACdI,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFK;AAGdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAG;;;;;;;;;;AADW,KAAf;AAHQ,GAAX,CAAL,CAgBGC,IAhBH,CAgBQC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAhBpB,EAiBGL,IAjBH,CAiBQO,IAAI,IAAI;AACZf,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEb,YAAY,CAACmB,qBADZ;AAEPJ,MAAAA,OAAO,EAAEG,IAAI,CAACA,IAAL,CAAUE;AAFZ,KAAD,CAAR;AAID,GAtBH;AAuBD,CAxBM;AA0BP,OAAO,MAAMC,gBAAgB,GAAG,MAAMlB,QAAQ,IAAI;AAChDC,EAAAA,KAAK,CAACH,QAAD,EAAW;AACdI,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFK;AAGdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAf;AAHQ,GAAX,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAClBT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEb,YAAY,CAACsB,kBADZ;AAEPP,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT;AAFF,KAAD,CAAR;AAID,GATD;AAUD,CAXM","sourcesContent":["import { ACTION_TYPES, BASE_URL } from \"./actionTypes\";\n\nexport const fetchSummaryReport = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n    body: JSON.stringify({ query: `{getsummaryreport}` })\n  }).then(response => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_SUMMARY_REPORT,\n      payload: response.json()\n    });\n  });\n};\n\nexport const fetchDetailedReport = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n    body: JSON.stringify({\n      query: `{getalldetailedreports{\n        _id,\n        active,\n        confirmed,\n        deaths,\n        recovered,\n        flag_url,\n        longitude,\n        latitude}\n    }`\n    })\n  })\n    .then(response => response.json())\n    .then(data => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_DETAILED_REPORT,\n        payload: data.data.getalldetailedreports\n      });\n    });\n};\n\nexport const fetchCountryData = () => dispatch => {\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n    body: JSON.stringify({ query: `{getcountries}` })\n  }).then(response => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_COUNTRY_DATA,\n      payload: response.json()\n    });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}