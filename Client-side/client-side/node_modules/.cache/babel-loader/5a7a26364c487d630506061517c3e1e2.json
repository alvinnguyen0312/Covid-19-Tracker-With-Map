{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\nmapboxgl.accessToken = MAPBOX_API_TOKEN;\nvar map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    loadMap(map);\n  }, []);\n\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\").then(response => response.json()).then(data => map.once(\"load\", function () {\n      map.addSource(\"points\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: data\n        }\n      });\n      map.addLayer({\n        id: \"circles\",\n        source: \"points\",\n        type: \"circle\",\n        paint: {\n          \"circle-opacity\": 0.75,\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"total_cases\"], 1, 4, 1000, 8, 4000, 10, 8000, 14, 12000, 18, 100000, 40, 250000, 100],\n          \"circle-color\": \"#EA240F\"\n        }\n      });\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      let previous_id;\n      map.on(\"mousemove\", \"circles\", e => {\n        const key = e.features[0].properties.key;\n\n        if (key !== previous_id) {\n          const {\n            name,\n            confirmed,\n            deaths,\n            recovered\n          } = e.features[0].properties;\n          map.getCanvas().style.cursor = \"pointer\";\n          const coordinates = e.features[0].geometry.coordinates.slice();\n          const HTML = `<html> <style type=\"text/css\"> @import url('https://fonts.googleapis.com/css2?family=Lato&family=Roboto:ital,wght@0,400;0,500;1,300&display=swap'); body { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; } .header-title { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; font-size: 15px; font-weight: bold; color: #000000; } .flex-container { height: 30px; display: flex; flex-wrap: nowrap; } .dot-container { width: 20px; height: 30px; display: flex; justify-content: center; align-items: center; } .title-container { width: 95px; height: 30px; display: flex; align-items: center; } .statistics-container { width: 80px; height: 30px; display: flex; justify-content: flex-end; align-items: center; } .confirmed-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #DA1400; } .deaths-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #525252; } .recovered-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #3BD202; } .statistics-label { font-family: 'Roboto', sans-serif; font-size: 12px; } .statistics-count { font-family: 'Roboto', sans-serif; font-size: 12px; } </style> <body> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"40\"> <tr> <td align=\"center\" \"> <span class=\" header-title \">${name}</span> </td> </tr> </table> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"90\"> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"confirmed-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Confirmed</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${confirmed}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"deaths-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Deaths</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${deaths}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"recovered-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Recovered</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${recovered}</span></div> </td> </tr> </table> </body> </html>`;\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          popup.setLngLat(coordinates).setHTML(HTML).addTo(map);\n        }\n      });\n      map.on(\"mouseleave\", \"circles\", function () {\n        previous_id = undefined;\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      });\n    }));\n  };\n\n  if (props.locationOnMap) {\n    map.flyTo({\n      center: [props.locationOnMap.latitude, props.locationOnMap.longitude],\n      zoom: 4,\n      bearing: 0,\n      speed: 1,\n      curve: 1,\n      easing: function (t) {\n        return t;\n      },\n      essential: true\n    });\n  }\n\n  console.log(\"location:\" + props.locationOnMap);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapBox,\n    style: {\n      width: \"60%\",\n      minHeight: \"960px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);","map":{"version":3,"sources":["/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js"],"names":["React","useEffect","useRef","mapboxgl","MAPBOX_API_TOKEN","actions","connect","accessToken","map","Map","props","mapBox","fetchDetailedReport","container","current","style","center","zoom","loadMap","fetch","then","response","json","data","once","addSource","type","features","addLayer","id","source","paint","popup","Popup","closeButton","closeOnClick","previous_id","on","e","key","properties","name","confirmed","deaths","recovered","getCanvas","cursor","coordinates","geometry","slice","HTML","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","undefined","remove","locationOnMap","flyTo","latitude","longitude","bearing","speed","curve","easing","t","essential","console","log","width","minHeight","mapStateToProps","state","reportList","reports","mapActionToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\n\nmapboxgl.accessToken = MAPBOX_API_TOKEN;\nvar map = null;\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    loadMap(map);\n  }, []);\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\")\n      .then(response => response.json())\n      .then(data =>\n        map.once(\"load\", function() {\n          map.addSource(\"points\", {\n            type: \"geojson\",\n            data: {\n              type: \"FeatureCollection\",\n              features: data\n            }\n          });\n          map.addLayer({\n            id: \"circles\",\n            source: \"points\",\n            type: \"circle\",\n            paint: {\n              \"circle-opacity\": 0.75,\n              \"circle-radius\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"get\", \"total_cases\"],\n                1,\n                4,\n                1000,\n                8,\n                4000,\n                10,\n                8000,\n                14,\n                12000,\n                18,\n                100000,\n                40,\n                250000,\n                100\n              ],\n              \"circle-color\": \"#EA240F\"\n            }\n          });\n          const popup = new mapboxgl.Popup({\n            closeButton: false,\n            closeOnClick: false\n          });\n\n          let previous_id;\n\n          map.on(\"mousemove\", \"circles\", e => {\n            const key = e.features[0].properties.key;\n            if (key !== previous_id) {\n              const {\n                name,\n                confirmed,\n                deaths,\n                recovered\n              } = e.features[0].properties;\n              map.getCanvas().style.cursor = \"pointer\";\n\n              const coordinates = e.features[0].geometry.coordinates.slice();\n              const HTML = `<html> <style type=\"text/css\"> @import url('https://fonts.googleapis.com/css2?family=Lato&family=Roboto:ital,wght@0,400;0,500;1,300&display=swap'); body { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; } .header-title { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; font-size: 15px; font-weight: bold; color: #000000; } .flex-container { height: 30px; display: flex; flex-wrap: nowrap; } .dot-container { width: 20px; height: 30px; display: flex; justify-content: center; align-items: center; } .title-container { width: 95px; height: 30px; display: flex; align-items: center; } .statistics-container { width: 80px; height: 30px; display: flex; justify-content: flex-end; align-items: center; } .confirmed-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #DA1400; } .deaths-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #525252; } .recovered-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #3BD202; } .statistics-label { font-family: 'Roboto', sans-serif; font-size: 12px; } .statistics-count { font-family: 'Roboto', sans-serif; font-size: 12px; } </style> <body> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"40\"> <tr> <td align=\"center\" \"> <span class=\" header-title \">${name}</span> </td> </tr> </table> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"90\"> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"confirmed-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Confirmed</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${confirmed}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"deaths-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Deaths</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${deaths}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"recovered-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Recovered</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${recovered}</span></div> </td> </tr> </table> </body> </html>`;\n\n              while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n              }\n              popup\n                .setLngLat(coordinates)\n                .setHTML(HTML)\n                .addTo(map);\n            }\n          });\n\n          map.on(\"mouseleave\", \"circles\", function() {\n            previous_id = undefined;\n            map.getCanvas().style.cursor = \"\";\n            popup.remove();\n          });\n        })\n      );\n  };\n\n  if (props.locationOnMap) {\n    map.flyTo({\n      center: [props.locationOnMap.latitude, props.locationOnMap.longitude],\n      zoom: 4,\n      bearing: 0,\n      speed: 1,\n      curve: 1,\n      easing: function(t) {\n        return t;\n      },\n      essential: true\n    });\n  }\n\n  console.log(\"location:\" + props.locationOnMap);\n\n  return <div ref={mapBox} style={{ width: \"60%\", minHeight: \"960px\" }}></div>;\n};\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);\n"]},"metadata":{},"sourceType":"module"}