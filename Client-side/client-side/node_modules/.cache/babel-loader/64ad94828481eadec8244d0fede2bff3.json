{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\nmapboxgl.accessToken = MAPBOX_API_TOKEN; //var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    loadMap(map);\n  }, []);\n\n  const loadMap = map => {\n    map.addSource(\"covidData\", {\n      type: \"geojson\",\n      data: \"https://wanderdrone.appspot.com/\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapBox,\n    style: {\n      width: \"60%\",\n      minHeight: \"960px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);","map":{"version":3,"sources":["/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js"],"names":["React","useEffect","useRef","mapboxgl","MAPBOX_API_TOKEN","actions","connect","accessToken","Map","props","mapBox","fetchDetailedReport","map","container","current","style","center","zoom","loadMap","addSource","type","data","width","minHeight","mapStateToProps","state","reportList","reports","mapActionToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAH,QAAQ,CAACI,WAAT,GAAuBH,gBAAvB,C,CACA;;AAEA,MAAMI,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,MAAM,GAAGR,MAAM,EAArB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACE,mBAAN;AACA,QAAIC,GAAG,GAAG,IAAIT,QAAQ,CAACK,GAAb,CAAiB;AACzBK,MAAAA,SAAS,EAAEH,MAAM,CAACI,OADO;AAEzBC,MAAAA,KAAK,EAAE,iCAFkB;AAGzBC,MAAAA,MAAM,EAAE,CAAC,CAAC,GAAF,EAAO,EAAP,CAHiB;AAIzBC,MAAAA,IAAI,EAAE;AAJmB,KAAjB,CAAV;AAMAC,IAAAA,OAAO,CAACN,GAAD,CAAP;AACD,GATQ,EASN,EATM,CAAT;;AAUA,QAAMM,OAAO,GAAGN,GAAG,IAAI;AACrBA,IAAAA,GAAG,CAACO,SAAJ,CAAc,WAAd,EAA2B;AACzBC,MAAAA,IAAI,EAAE,SADmB;AAEzBC,MAAAA,IAAI,EAAE;AAFmB,KAA3B;AAID,GALD;;AAOA,sBAAO;AAAK,IAAA,GAAG,EAAEX,MAAV;AAAkB,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CApBD;;AAqBA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcN;AADM,CAAL,CAA7B;;AAIA,MAAMO,gBAAgB,GAAG;AACvBjB,EAAAA,mBAAmB,EAAEN,OAAO,CAACM;AADN,CAAzB;AAGA,eAAeL,OAAO,CAACkB,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CpB,GAA3C,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\n\nmapboxgl.accessToken = MAPBOX_API_TOKEN;\n//var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    loadMap(map);\n  }, []);\n  const loadMap = map => {\n    map.addSource(\"covidData\", {\n      type: \"geojson\",\n      data: \"https://wanderdrone.appspot.com/\"\n    });\n  };\n\n  return <div ref={mapBox} style={{ width: \"60%\", minHeight: \"960px\" }}></div>;\n};\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);\n"]},"metadata":{},"sourceType":"module"}