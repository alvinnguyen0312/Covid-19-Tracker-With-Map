{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\nmapboxgl.accessToken = MAPBOX_API_TOKEN; //var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    console.log(\"style: \" + map.isStyleLoaded());\n\n    if (!map.isStyleLoaded()) {\n      loadMap(map);\n    }\n  }, []);\n\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\").then(response => response.json()).then(data => map.once(\"load\", function () {\n      map.addSource(\"points\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: data\n        }\n      });\n      console.log(data);\n      map.addLayer({\n        id: \"circles\",\n        source: \"points\",\n        type: \"circle\",\n        paint: {\n          \"circle-opacity\": 0.75,\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"total_cases\"], 1, 4, 1000, 8, 4000, 10, 8000, 14, 12000, 18, 100000, 40, 250000, 100],\n          \"circle-color\": \"#EA240F\"\n        }\n      });\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      let previous_id;\n      map.on(\"mousemove\", \"circles\", e => {\n        const key = e.features[0].properties.key;\n\n        if (key !== previous_id) {\n          const {\n            name,\n            confirmed,\n            deaths,\n            recovered\n          } = e.features[0].properties;\n          map.getCanvas().style.cursor = \"pointer\";\n          const coordinates = e.features[0].geometry.coordinates.slice();\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          popup.setLngLat(coordinates).setHTML(HTML).addTo(map);\n        }\n      });\n      map.on(\"mouseleave\", \"circles\", function () {\n        previous_id = undefined;\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      });\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapBox,\n    style: {\n      width: \"60%\",\n      minHeight: \"960px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);","map":{"version":3,"sources":["/Users/mac/Desktop/COVID-19 Tracker/Client-side/client-side/src/components/map/Map.js"],"names":["React","useEffect","useRef","mapboxgl","MAPBOX_API_TOKEN","actions","connect","accessToken","Map","props","mapBox","fetchDetailedReport","map","container","current","style","center","zoom","console","log","isStyleLoaded","loadMap","fetch","then","response","json","data","once","addSource","type","features","addLayer","id","source","paint","popup","Popup","closeButton","closeOnClick","previous_id","on","e","key","properties","name","confirmed","deaths","recovered","getCanvas","cursor","coordinates","geometry","slice","Math","abs","lngLat","lng","setLngLat","setHTML","HTML","addTo","undefined","remove","width","minHeight","mapStateToProps","state","reportList","reports","mapActionToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MAPBOX_API_TOKEN } from \"../../actions/actionTypes\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as actions from \"../../actions/index\";\nimport { connect } from \"react-redux\";\n\nmapboxgl.accessToken = MAPBOX_API_TOKEN;\n//var map = null;\n\nconst Map = props => {\n  const mapBox = useRef();\n  useEffect(() => {\n    props.fetchDetailedReport();\n    var map = new mapboxgl.Map({\n      container: mapBox.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [-120, 50],\n      zoom: 2\n    });\n    console.log(\"style: \" + map.isStyleLoaded());\n    if (!map.isStyleLoaded()) {\n      loadMap(map);\n    }\n  }, []);\n  const loadMap = map => {\n    fetch(\"https://covid19-api.hackbotone.com/markers.geojson\")\n      .then(response => response.json())\n      .then(data =>\n        map.once(\"load\", function() {\n          map.addSource(\"points\", {\n            type: \"geojson\",\n            data: {\n              type: \"FeatureCollection\",\n              features: data\n            }\n          });\n          console.log(data);\n          map.addLayer({\n            id: \"circles\",\n            source: \"points\",\n            type: \"circle\",\n            paint: {\n              \"circle-opacity\": 0.75,\n              \"circle-radius\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"get\", \"total_cases\"],\n                1,\n                4,\n                1000,\n                8,\n                4000,\n                10,\n                8000,\n                14,\n                12000,\n                18,\n                100000,\n                40,\n                250000,\n                100\n              ],\n              \"circle-color\": \"#EA240F\"\n            }\n          });\n          const popup = new mapboxgl.Popup({\n            closeButton: false,\n            closeOnClick: false\n          });\n\n          let previous_id;\n\n          map.on(\"mousemove\", \"circles\", e => {\n            const key = e.features[0].properties.key;\n            if (key !== previous_id) {\n              const {\n                name,\n                confirmed,\n                deaths,\n                recovered\n              } = e.features[0].properties;\n              map.getCanvas().style.cursor = \"pointer\";\n\n              const coordinates = e.features[0].geometry.coordinates.slice();\n\n              while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n              }\n              popup\n                .setLngLat(coordinates)\n                .setHTML(HTML)\n                .addTo(map);\n            }\n          });\n\n          map.on(\"mouseleave\", \"circles\", function() {\n            previous_id = undefined;\n            map.getCanvas().style.cursor = \"\";\n            popup.remove();\n          });\n        })\n      );\n  };\n\n  return <div ref={mapBox} style={{ width: \"60%\", minHeight: \"960px\" }}></div>;\n};\nconst mapStateToProps = state => ({\n  reportList: state.reports.data\n});\n\nconst mapActionToProps = {\n  fetchDetailedReport: actions.fetchDetailedReport\n};\nexport default connect(mapStateToProps, mapActionToProps)(Map);\n"]},"metadata":{},"sourceType":"module"}